# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto_measurements.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from protobuf import proto_measurement_types_pb2 as proto__measurement__types__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18proto_measurements.proto\x1a\x1dproto_measurement_types.proto\"\x84\x01\n\x0cProtoChannel\x12\x1e\n\x04type\x18\x01 \x01(\x0e\x32\x10.MeasurementType\x12\x11\n\ttimestamp\x18\x02 \x01(\x05\x12\x13\n\x0bstart_point\x18\x04 \x01(\x11\x12\x1a\n\x0esample_offsets\x18\x05 \x03(\x11\x42\x02\x10\x01J\x04\x08\x06\x10\x07J\x04\x08\x07\x10\x08J\x04\x08\x08\x10\t\"\x8e\x02\n\x11ProtoMeasurements\x12\x12\n\nserial_num\x18\x01 \x01(\x0c\x12\x16\n\x0e\x62\x61ttery_status\x18\x02 \x01(\x08\x12\x1f\n\x17measurement_period_base\x18\x03 \x01(\r\x12!\n\x19measurement_period_factor\x18\x08 \x01(\r\x12\x1f\n\x08\x63hannels\x18\x04 \x03(\x0b\x32\r.ProtoChannel\x12\x1c\n\x14next_transmission_at\x18\x05 \x01(\r\x12\x17\n\x0ftransfer_reason\x18\x06 \x01(\r\x12\x0e\n\x06signal\x18\x07 \x01(\r\x12\x0c\n\x04hash\x18\t \x01(\r\x12\x13\n\x0b\x63loud_token\x18\x10 \x01(\tb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'proto_measurements_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PROTOCHANNEL.fields_by_name['sample_offsets']._options = None
  _PROTOCHANNEL.fields_by_name['sample_offsets']._serialized_options = b'\020\001'
  _PROTOCHANNEL._serialized_start=60
  _PROTOCHANNEL._serialized_end=192
  _PROTOMEASUREMENTS._serialized_start=195
  _PROTOMEASUREMENTS._serialized_end=465
# @@protoc_insertion_point(module_scope)
